apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    compileSdkVersion Version.androidCompileSdk
    defaultConfig {
        applicationId "kioli.myalgia"
        minSdkVersion Version.androidMinSdk
        targetSdkVersion Version.androidTargetSdk
        versionCode Version.androidVersionCode
        versionName Version.androidVersionName
        testInstrumentationRunner Lib.testInstrumentationRunner
        vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        def WEATHER_KEY = "WEATHER_KEY"
        release {
            buildConfigField "String", WEATHER_KEY, '"e44d02fff19244c3b30205216181609"'
        }
        debug {
            buildConfigField "String", WEATHER_KEY, '"e44d02fff19244c3b30205216181609"'
        }
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

configurations.all {
    resolutionStrategy {
        failOnVersionConflict()
        preferProjectModules()
    }
}

dependencies {
    implementation Lib.constraintLayout
    implementation Lib.coroutinesAndroid
    implementation Lib.coroutinesCore
    implementation Lib.kodein
    implementation Lib.kodeinFramework
    implementation Lib.kotlin
    implementation Lib.okHttpLogger
    implementation Lib.picasso
    implementation Lib.retrofit
    implementation Lib.retrofitConverter
    implementation Lib.room
    implementation Lib.supportLib
    implementation Lib.timber
    implementation("com.crashlytics.sdk.android:crashlytics:${Version.fabric}") {
        transitive = true
    }

    kapt Lib.roomCompiler

    testImplementation Lib.junit
    testImplementation Lib.roomTesting

    androidTestImplementation Lib.espresso
    androidTestImplementation Lib.espressoRunner
}
